/*
    On reprend le probleme precedent et on le distribue sur quatre processeurs 
    a l'aide de la l'A.P.I PETSc disponible sur FreeFem. 

    - Solution exacte
    - Chargement de l'API PETSc
    - Chargement de la librairie macro_ddm.idp
    - Construction du maillage global
    - Declaration de l'operateur distribue Ah
    - Declaration du cadre fonctionnel fespace Vh(Th, P1)
    - Definition du probleme variationnel sous forme matricielle
        - varf a(u, v) = [...]
        - varf l(u, v) = [...]
        - Ah = a(Vh, Vh)
        - real[int] bh = l(0, Vh)
    - Resolution
    - Visualisation
    - Export .vtk

    auteur : Julien VALENTIN, d'apres 
    date   : 10 mai 2022

    execution dans un terminal externe
    ----------------------------------
    FreeFem++-mpi "C:\Users\julien\Documents\GitHub\Scikit\fr\edp\poisson\FreeFem\02_poisson2d_petsc.edp" -n 4 -v 0 -wg
*/

// Solution exacte
func u = 1 - x^2 - y^2;

// A.P.I PETSc
load "PETSc"
macro dimension()2// fin de macro

// Librairie FreeFem pour la parallelisation
include "macro_ddm.idp"

// Maillage global
int npoints = 4096;
border C(t=0, 1){
    x = cos(2*pi*t);
    y = sin(2*pi*t);
    label=1;
}
mesh Th = buildmesh(C(getARGV("-global", npoints)));

// Creation de l'operateur distribue
Mat Ah;
buildMat(Th, getARGV("-split", 1), Ah, P1, mpiCommWorld)
set(Ah, sparams = "-ksp_view");

// Cadre fonctionnel
fespace Vh(Th, P1);

/*
    Definition du probleme variationnel sous sa forme discrete, i.e sous forme 
    de systeme lineaire

                            Ah uh = bh
    
    Ã  partir de la forme variationnelle du laplacien.
*/
varf a(uh, vh) = int2d(Th)( dx(uh)*dx(vh) + dy(uh)*dy(vh) ) + on(1, uh=0);
Ah = a(Vh, Vh);

varf l(uh, vh) = int2d(Th)( 4*vh );
real[int] bh = l(0, Vh);

// Declaration de la solution
Vh<real> uh;

// Resolution
uh[] = Ah^(-1) * bh;

// Visualisation
macro def(u)u// fin de macro
plotMPI(Th, uh, P1, def, real, cmm="Solution");

if(mpirank == 0){
    load "iovtk"
    int[int] ordre = [1];
    string     nom = "C:/Users/julien/Documents/GitHub/Scikit/fr/edp/poisson/FreeFem/out/uhpetsc.vtk";
    savevtk(nom, Th, [uh, 0.0, 0.0], dataname="Uh", order=ordre);
}

/////////
// FIN //
/////////