/*
    Resolution du systeme de Stokes avec conditions mixtes pression - vitesse
    grace aux iterations d'Uzawa effectuees par methode du gradient conjugue.

    auteur : Julien Valentin
    date : 27/05/2022

    execution
    ---------
    FreeFem++ "C:\Users\julien\Desktop\scikit\fr\edp\stokes\FreeFem\05_stokes_uzawa.edp" -ns
*/

// Maillage du canal rectangulaire
real l = 5;
real h = 1;
int nely = 16;
int nelx = int(l/h) * nely;
int[int] lab = [1, 3, 1, 2];

mesh Th = square(nelx, nely, [l*x, h*y], label = lab);

// Caracterisation du fluide
real rho = 1;
real nu = 1;

// Definition du cadre fonctionnel
fespace V(Th, P2b);
V vx, vy, w;
V b, bcx, bcy;

fespace Q(Th, P1);
Q p;
Q ppp;

// Definition des formes variationnelles
varf bx(v, q) = int2d(Th)( -dx(v)*q );
varf by(v, q) = int2d(Th)( -dy(v)*q );
varf a(v, w) = int2d(Th)( dx(v)*dx(w) + dy(v)*dy(w) ) + int1d(Th, 2)( 3*w ) + on(1, v=0);

// Assemblage des blocs du systeme
matrix A = a(V, V);
matrix Bx = bx(V, Q);
matrix By = by(V, Q);

bcx[] = a(0, V);
bcy[] = 0;

// Fonction dont on cherche la racine
func real[int] divup( real[int]& pp ){
    
    // Calcul de vx
    b[] = Bx' * pp;
    b[] *= -1;
    b[] += bcx[];
    vx[] = A^(-1)*b[];

    // Calcul de vy
    b[] = By' * pp;
    b[] *= -1;
    b[] += bcy[];
    vy[] = A^(-1)*b[];

    // v^n = (A^(-1)*Bx^T*p^n, By^T*p^n)^T
    ppp[] = Bx*vx[];
    ppp[] += By*vy[];

    // Fin du calcul
    return ppp[];
}

// Initialisation
p=0;

// Optimisation par algorithme de Gradient Conjugue
LinearCG(divup, p[], eps=1.e-6, nbiter=50);

// Calcul de la solution finale
divup(p[]);

// Affichage
plot([vx, vy], p, coef=0.1, value=true, wait=1);